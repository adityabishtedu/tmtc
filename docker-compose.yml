version: "3.8"

services:
  # MongoDB Database
  mongodb:
    image: mongo:6.0
    container_name: travel_itinerary_mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: travel_itinerary_db
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - travel_itinerary_network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: travel_itinerary_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - travel_itinerary_network

  # Travel Itinerary API
  api:
    build: .
    container_name: travel_itinerary_api
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3000
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/travel_itinerary_db?authSource=admin
      JWT_SECRET: your-super-secret-jwt-key-change-this-in-production
      JWT_EXPIRES_IN: 7d
      REDIS_URL: redis://redis:6379
      REDIS_TTL: 300
      RATE_LIMIT_WINDOW_MS: 900000
      RATE_LIMIT_MAX_REQUESTS: 100
    ports:
      - "3000:3000"
    depends_on:
      - mongodb
      - redis
    networks:
      - travel_itinerary_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  travel_itinerary_network:
    driver: bridge
